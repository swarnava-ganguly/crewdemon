# apiVersion: v1
# data:
#   .dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOnsidXNlcm5hbWUiOiJzd2FybmF2YTI4IiwicGFzc3dvcmQiOiJpbG92ZWRvY2tlciIsImVtYWlsIjoic3dhcm5hdmEyOEBnbWFpbC5jb20iLCJhdXRoIjoiYzNkaGNtNWhkbUV5T0RwcGJHOTJaV1J2WTJ0bGNnPT0ifX19
# kind: Secret
# metadata:
#   name: myregistrykey
#   namespace: application
# type: kubernetes.io/dockerconfigjson
# --- 
# apiVersion: v1
# kind: Secret
# metadata:
#   name: {{ .Values.name }}-secrets
#   namespace: {{ .Values.namespace }}
# data:
#   username: cm9vdA==
#   password: cm9vdA==
#   userpassword: cm9vdA==
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}-deployment
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      hostPID: false
      hostIPC: false
      hostNetwork: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      serviceAccountName: {{ .Values.namespace }}-ns-sa
      containers:
      - name: {{ .Values.image.name }}
        image: {{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.image.containerPort }}
        resources:
          limits:
            cpu: {{ .Values.image.resources.limits.cpu }}
            memory: {{ .Values.image.resources.limits.memory }}
          requests:
            cpu: {{ .Values.image.resources.requests.cpu }}
            memory: {{ .Values.image.resources.requests.memory }}
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop: [ "ALL" ]
          seccompProfile:
            type: "RuntimeDefault"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: {{ .Values.image.containerPort }}
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: {{ .Values.image.containerPort }}
          initialDelaySeconds: 10
          periodSeconds: 15
          failureThreshold: 3
        env:
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.name }}-config
              key: host

        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.name }}-config
              key: dbName

        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.name }}-secrets
              key: username

        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.name }}-secrets
              key: password
