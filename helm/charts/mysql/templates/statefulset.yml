---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
    tier: database
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
      tier: database
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        tier: database
    spec:
      hostPID: false
      hostIPC: false
      hostNetwork: false
      serviceAccountName: {{ .Values.namespace }}-ns-sa
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - image: {{ .Values.image.name }}:{{ .Values.image.tag }}
        args:
        - "--ignore-db-dir=lost+found"
        - "--default-authentication-plugin=mysql_native_password"
        name: {{ .Values.name }}
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.name }}-secrets
              key: password
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.name }}-config
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.name }}-secrets
              key: userpassword

        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.name }}-config
              key: dbName
        ports:
        - containerPort: {{ .Values.image.containerPort }}
          name: {{ .Values.name }}
        resources:
          limits:
            cpu: {{ .Values.image.resources.limits.cpu }}
            memory: {{ .Values.image.resources.limits.memory }}
          requests:
            cpu: {{ .Values.image.resources.requests.cpu }}
            memory: {{ .Values.image.resources.requests.memory }}
        readinessProbe:
          exec:
            command:
            - sh
            - "-c"
            - "mysqladmin ping -h localhost"
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        livenessProbe:
          exec:
            command:
            - sh
            - "-c"
            - "mysqladmin ping -h localhost"
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        volumeMounts:
        - name: {{ .Values.name }}-persistent-storage
          mountPath: /var/lib/mysql
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop: [ "ALL" ]
          seccompProfile:
            type: "RuntimeDefault"
      volumes:
      - name: {{ .Values.name }}-persistent-storage
        persistentVolumeClaim:
          claimName: {{ .Values.name }}-pv-claim
---

# apiVersion: v1
# kind: Secret
# metadata:
#   name: mysql-secrets
#   namespace: database
# data:
#   password: cm9vdA==
#   userpassword: cm9vdA==