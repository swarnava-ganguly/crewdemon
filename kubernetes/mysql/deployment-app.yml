apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: application
data:
  host: jdbc:mysql://mysql.database.svc.cluster.local:3306/challenge?useSSL=false&createDatabaseIfNotExist=true
  dbName: challenge
  username: appuser
---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOnsidXNlcm5hbWUiOiJzd2FybmF2YTI4IiwicGFzc3dvcmQiOiJpbG92ZWRvY2tlciIsImVtYWlsIjoic3dhcm5hdmEyOEBnbWFpbC5jb20iLCJhdXRoIjoiYzNkaGNtNWhkbUV5T0RwcGJHOTJaV1J2WTJ0bGNnPT0ifX19
kind: Secret
metadata:
  name: myregistrykey
  namespace: application
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: application
data:
  username: cm9vdA==
  password: cm9vdA==
  userpassword: cm9vdA==
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-app-deployment
  namespace: application
spec:
  selector:
    matchLabels:
      app: java-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  replicas: 2
  template:
    metadata:
      labels:
        app: java-app
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      serviceAccountName: application-ns-sa
      containers:
      - name: java-app
        image: swarnava28/java-app:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 15
          failureThreshold: 3
        env:
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: host

        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: dbName

        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: username

        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: password
---

apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata:
  # Metadata of the resource kind we are creating
  name: springboot-svc
  namespace: application
spec:
  selector:
    app: java-app
  ports:
  - protocol: "TCP"
    port: 8080 # The port that the service is running on in the cluster
    targetPort: 8080 # The port exposed by the service
  type: NodePort # type of the service.
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-java-app
  namespace: application
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: java-app-deployment
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: application-ns-quota
  namespace: application
spec:
  hard:
    pods: "5"
    requests.cpu: "2"
    requests.memory: 1Gi
    limits.cpu: "4"
    limits.memory: 2Gi
    
